unit uSecugen;

interface

type
  TItiumSecugen = class
  private
    objSecuBsp : variant;
    erro_code : integer;
  public
    function inicializar_leitor(var erro :string) : boolean;
    function capturar(var digital : string; var erro :string; cancelado : boolean) : boolean;
    function digital_confere(digital1 : string; digital2 : string) : boolean;
  end;

implementation

uses Comobj, uConstBioMatch, sysutils;

{ TItiumSecugen }

function TItiumSecugen.capturar(var digital, erro: string; cancelado : boolean): boolean;
begin
  objSecuBsp.Capture;
  if objSecuBSP.ErrorCode = SecuBSPERROR_NONE then
  begin
    digital := objSecuBsp.FIRTextData;
    Result := True;
    cancelado := False;
  end
  else
  begin
    if (objSecuBsp.ErrorCode = SecuBSPERROR_CANCELADO) then
      cancelado := true
    else
      cancelado := false;
    Result := False;
    erro := 'Erro na captura! [' + IntToStr(objSecuBsp.ErrorCode) + ']';
  end;
end;

function TItiumSecugen.digital_confere(digital1, digital2: string): boolean;
begin
  objSecuBsp.VerifyMatch(digital1, digital2);
  Result := objSecuBsp.IsMatched = SecuBSP_TRUE;
end;

function TItiumSecugen.inicializar_leitor(var erro: string): boolean;
begin
  objSecuBsp := CreateOleObject('SecuBSPCOM.APIInterface');
  objSecuBSP.EnumerateDevice;
  erro_code := objSecuBSP.OpenDevice(SecuBSP_DEVICE_ID_AUTO_DETECT);
  if objSecuBSP.ErrorCode = SecuBSPERROR_NONE then
  begin
    Result := True;
  end
  else
  begin
    Result := False;
    erro :=  'Erro ao ativar leitor! [' + inttostr(objSecuBSP.ErrorCode) + ']';
  end;
end;

end.
