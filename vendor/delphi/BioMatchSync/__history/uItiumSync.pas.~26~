unit uItiumSync;

interface

uses
  Classes, dmDados, StdCtrls, Windows;

type
  TItiumSync = class(TThread)
  private
    { Private declarations }
    FDados : TdtmDados;
    FAtuBatidas : boolean;
    FAtuFuncionarios : boolean;
    FLog : TMemo;
    procedure AtualizarLog;
  protected
    procedure Execute; override;
  public
    constructor Create(CreateSuspended: Boolean; _log : TMemo; _atubatidas : boolean; _atufuncionarios : boolean);
    
  end;

implementation

{ Important: Methods and properties of objects in visual components can only be
  used in a method called using Synchronize, for example,

      Synchronize(UpdateCaption);

  and UpdateCaption could look like,

    procedure TItiumSync.UpdateCaption;
    begin
      Form1.Caption := 'Updated in a thread';
    end; }

{ TItiumSync }

constructor TItiumSync.Create(CreateSuspended: Boolean; _log : TMemo; _atubatidas : boolean; _atufuncionarios : boolean);
begin
  inherited Create (CreateSuspended);
  FLog := _log;
  FAtuBatidas := _atubatidas;
  FAtuFuncionarios := _atufuncionarios;
  FreeOnTerminate := false;
end;



procedure TItiumSync.Execute;
begin
  while (not Terminated) do
  begin
    Sleep (5000);
    Synchronize(AtualizarLog);
  end;
end;

procedure TItiumSync.AtualizarLog;
begin
  FLog.Lines.Add('------------');
end;

end.
